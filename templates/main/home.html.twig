{% extends 'base.html.twig' %}

{% block title %} Sortir.com | Home{% endblock %}

    {% block main %}

        <div id="filtres_sorties" class="row justify-content-center g-0">
            <div id="filtres_champs" class="col-10">
                <div id="filtre_campus" class ="col-4">
                    {{ form_start(filtre_form, {attr: {'novalidate': 'novalidate'}}) }}
                    {{ form_label(filtre_form.campus) }}
                    {{ form_widget(filtre_form.campus) }}
                    {{ form_end(filtre_form) }}
                    <button id="rechercheFiltre" class="btn btn-primary" style="margin-bottom: 1em;" onclick="rechercheSorties()">Rechercher</button>
                </div>

            </div>

        </div>

        <div id="filtres"></div>
        <div id="liste_sorties" class="row justify-content-center g-0">
            <table id="tab_sorties" class="col-10">
                <thead>
                <tr>
                    <th class="col-3">Nom de la sortie</th>
                    <th class="col-1">Date de la sortie</th>
                    <th class="col-1">Clôture</th>
                    <th class="col-1">inscrits/places</th>
                    <th class="col-1">Etat</th>
                    <th class="col-1">Inscrit</th>
                    <th class="col-2">Organisateur</th>
                    <th class="col-2">Actions</th>
                </tr>
                </thead>
                <tbody id="lignesSorties">
                    {% for sortie in sorties %}
                    {% if (date("now") < sortie.dateHeureDebut("+1month")) %}
                    <tr data-id-campus="{{ sortie.campusOrganisateur.id }}"
                        data-date-debut="{{ sortie.dateHeureDebut|date("d/m/Y", "Europe/Paris")}}"
                        data-date-fin="{{ sortie.dateLimiteInscription|date("d/m/Y", "Europe/Paris")}}"
                        data-organisateur-id="{{ sortie.organisateur.id }}"
                    >
                    <td class="col-3"> <a href="{{ path('sorties_detail', {id:sortie.id })}}">{{ sortie.nom }}</a></td>
                    <td class="col-1">{{ sortie.dateHeureDebut|date("d/m/Y H:i") }}</td>
                    <td class="col-1">{{ sortie.dateLimiteInscription|date("d/m/Y H:i") }}</td>
                    <td class="col-1">{{ sortie.participants|length }}/{{ sortie.nbInscriptionsMax }}</td>
                    <td class="col-1">{% if (sortie.dateLimiteInscription > date("now")) %}
                            Ouverte
                        {% elseif (sortie.dateHeureDebut < date("now")) %}
                            Passée
                        {% elseif (sortie.dateLimiteInscription < date("now")) %}
                            Cloturée
                        {% endif %}</td>
                    <td class="col-1">{% for participant in sortie.participants %}
                                            {% if participant.id != null and participant.id == app.user.id %}
                            X
                                            {% endif %}
                                     {% endfor %}
                    </td>
                    <td class="col-2">{{ sortie.organisateur.pseudo }}</td>
                    <td class="col-2">
                            {% if sortie.isParticipant (app.user.id) and (sortie.dateLimiteInscription > date("now")) %}
                                    <a href="{{ path('desinscription_sortie',{id:sortie.id}) }}">Se désister</a>
                            {% elseif (not sortie.isParticipant (app.user.id)) and (sortie.dateLimiteInscription > date("now")) %}
                                    <a href="{{ path('inscription_sortie',{id:sortie.id}) }}">S'inscrire</a>
                            {% endif %}
                    </td>
                    </tr>
                    {% endif %}
                    {%  endfor %}

                </tbody>

            </table>
        </div>
        <script>

            window.onload=init;
        var listeCampus;
        var lignesSorties;
        var dateDebut;
        var anneeDateDebut;
        var moisDateDebut;
        var jourDateDebut;
        var dateFin;
        var anneeDateFin;
        var moisDateFin;
        var jourDateFin;
        var isOrganisateur;
        var idUser = {{ app.user.id }};

    function init(){

        //On indique à JS les éléments à cibler pour le système de filtre via les ID générées par le form Symfony
        listeCampus = document.getElementById('filtres_sorties_form_campus');
        dateDebut = document.getElementById('filtres_sorties_form_dateDebut');
        anneeDateDebut = document.getElementById('filtres_sorties_form_dateDebut_year');
        moisDateDebut = document.getElementById('filtres_sorties_form_dateDebut_month');
        jourDateDebut = document.getElementById('filtres_sorties_form_dateDebut_day');
        dateFin = document.getElementById('filtres_sorties_form_dateFin');
        anneeDateFin = document.getElementById('filtres_sorties_form_dateFin_year');
        moisDateFin = document.getElementById('filtres_sorties_form_dateFin_month');
        jourDateFin = document.getElementById('filtres_sorties_form_dateFin_day');
        isOrganisateur = document.getElementById('filtres_sorties_form_isOrganisateur');

        lignesSorties = document.getElementById('lignesSorties');
        let optionAllCampus = document.createElement("option");
        optionAllCampus.value='0';
        optionAllCampus.innerText='Tous';
        listeCampus.prepend(optionAllCampus);
        listeCampus.value='0';

        // Dès que l'utilisateur effectue une modification sur le formulaire de filtre, on appelle les fonctions liées
        listeCampus.onchange=campusSelect;
        dateDebut.onchange=dateDebutSelect;
        dateFin.onchange=dateFinSelect;

        isOrganisateur.addEventListener('change', (event) => {
            if (event.currentTarget.checked) {
                organisateurSelect(idUser)
            }
            else campusSelect();
        })

        isInscrit.addEventListener('change', (event) => {
            if (event.currentTarget.checked) {
                inscritSelect(idUser)
            }
            else campusSelect();
        })

    }

    function rechercheSorties() {

        campusSelect();
        dateDebutSelect();
        dateFinSelect();

            }


    function campusSelect() {
        let idcampus = listeCampus.value;

        let tr_lignesSorties = lignesSorties.children;
        for (var i = 0; i < tr_lignesSorties.length; i++) {

            if (tr_lignesSorties[i].dataset.idCampus === idcampus || idcampus === '0') {
                tr_lignesSorties[i].style = "";

            } else {
                tr_lignesSorties[i].style.display = "none";
            }
        }
    }

    function dateDebutSelect() {
        let debutSelect = new Date(anneeDateDebut.value, moisDateDebut.value-1, jourDateDebut.value);
        let tr_lignesSorties = lignesSorties.children;

        for (var i=0; i<tr_lignesSorties.length; i++) {
            let debutSortie = new Date(tr_lignesSorties[i].dataset.dateDebut);

            if(debutSortie >= debutSelect) {
                tr_lignesSorties[i].style = "";
            }else
            {
                tr_lignesSorties[i].style.display="none";
            }
        }
    }

    function dateFinSelect() {
        let finSelect = new Date(anneeDateFin.value, moisDateFin.value-1, jourDateFin.value);
        let tr_lignesSorties = lignesSorties.children;

        for (var i=0; i<tr_lignesSorties.length; i++) {
            let finSortie = new Date(tr_lignesSorties[i].dataset.dateFin);

            if(finSortie <= finSelect) {
                tr_lignesSorties[i].style = "";
            }else
            {
                tr_lignesSorties[i].style.display="none";
            }
        }
    }

    function organisateurSelect(idUser) {
        let tr_lignesSorties = lignesSorties.children;

        console.log(idUser);

        for (var i=0; i<tr_lignesSorties.length; i++) {
            console.log(tr_lignesSorties[i].dataset.organisateurId);

            if(idUser == tr_lignesSorties[i].dataset.organisateurId ) {
                tr_lignesSorties[i].style = "";
            }else
            {
                tr_lignesSorties[i].style.display="none";
            }

        }
    }

    function inscritSelect(idUser) {
        let tr_lignesSorties = lignesSorties.children;

        console.log(inscritArray);

        for (var i=0; i<tr_lignesSorties.length; i++) {

            for ( var participant of inscritArray) {
                console.log(participant);

                if (participant && participant == idUser) {
                    tr_lignesSorties[i].style = "";
                }else
                {
                    tr_lignesSorties[i].style.display="none";
                }
            }

        }


    }


        </script>
    {% endblock%}